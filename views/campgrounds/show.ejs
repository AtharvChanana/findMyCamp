<% layout('layouts/boilerplate') %>

<style>
    :root {
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
        --card-bg: #1e1e1e;
        --card-hover: #2a2a2a;
        --primary-text: #ffffff;
        --secondary-text: #b0b0b0;
        --accent-color: #4a6cf7;
        --accent-hover: #3a5ce4;
        --border-color: #333333;
    }
    
    body {
        background-color: var(--dark-bg);
        color: var(--primary-text);
    }
    
    .tooltip {
        --bs-tooltip-bg: var(--card-bg);
        --bs-tooltip-color: var(--primary-text);
    }
    
    .tooltip-inner {
        background-color: var(--bs-tooltip-bg);
        color: var(--bs-tooltip-color);
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.2);
        border: 1px solid var(--border-color);
    }
    
    .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before,
    .bs-tooltip-top .tooltip-arrow::before {
        border-top-color: var(--bs-tooltip-bg);
    }
    
    .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before,
    .bs-tooltip-end .tooltip-arrow::before {
        border-right-color: var(--bs-tooltip-bg);
    }
    
    .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before,
    .bs-tooltip-bottom .tooltip-arrow::before {
        border-bottom-color: var(--bs-tooltip-bg);
    }
    
    .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before,
    .bs-tooltip-start .tooltip-arrow::before {
        border-left-color: var(--bs-tooltip-bg);
    }
    
    /* Booking Card Styles */
    .booking-card {
        top: 20px;
        background: var(--card-bg);
        border: 1px solid var(--border-color) !important;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s ease;
    }
    
    .booking-card:hover {
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2) !important;
        transform: translateY(-2px);
    }
    
    .booking-price {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary-text);
        line-height: 1.2;
        margin-bottom: 0.25rem;
    }
    
    .booking-price-label {
        font-size: 0.875rem;
        color: var(--secondary-text);
    }
    
    .booking-badge {
        display: inline-block;
        font-size: 0.8rem;
        color: var(--secondary-text);
        margin-bottom: 0.25rem;
    }
    
    .booking-badge-success {
        color: #28a745 !important;
    }
    
    .booking-label {
        font-size: 0.8rem;
        color: var(--secondary-text);
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
        display: block;
    }
    
    .booking-input-group {
        margin-bottom: 1rem;
    }
    
    .booking-input, 
    .booking-select {
        background-color: var(--darker-bg) !important;
        border-color: var(--border-color) !important;
        color: var(--primary-text) !important;
        height: 48px;
        padding: 0.75rem 1rem;
        border-radius: 8px !important;
    }
    
    .booking-input:focus, 
    .booking-select:focus {
        border-color: var(--accent-color) !important;
        box-shadow: 0 0 0 0.25rem rgba(74, 108, 247, 0.25) !important;
    }
    
    .input-group-text {
        background-color: var(--darker-bg) !important;
        border-color: var(--border-color) !important;
        color: var(--primary-text) !important;
        border-right: none !important;
        border-top-left-radius: 8px !important;
        border-bottom-left-radius: 8px !important;
    }
    
    .booking-button {
        background: linear-gradient(135deg, var(--accent-color), #6c5ce7);
        color: white;
        font-weight: 600;
        padding: 0.75rem;
        border-radius: 8px;
        border: none;
        transition: all 0.3s ease;
        font-size: 1.05rem;
        margin-top: 0.5rem;
    }
    
    .booking-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(74, 108, 247, 0.3);
    }
    
    .booking-price-breakdown {
        background: var(--darker-bg);
        padding: 1.25rem;
        border-radius: 10px;
        margin-top: 1rem;
    }
    
    .booking-secure-info,
    .booking-payment-info {
        font-size: 0.85rem;
        color: var(--secondary-text);
        margin-bottom: 0.5rem;
    }
    
    .booking-secure-info i {
        color: #28a745;
    }
    
    .booking-payment-info i {
        color: var(--accent-color);
    }
</style>

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="py-3 bg-dark-2" style="background-color: var(--dark-surface) !important;">
    <div class="container">
        <ol class="breadcrumb mb-0 text-white-50">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-white-50">Home</a></li>
            <li class="breadcrumb-item"><a href="/campgrounds" class="text-decoration-none text-white-50">Campgrounds</a></li>
            <li class="breadcrumb-item active text-white" aria-current="page"><%= campground.title %></li>
        </ol>
    </div>
</nav>

<!-- Main Content -->
<div class="container py-4">
    <!-- Campground Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="p-4 rounded-3 mb-4" style="background: var(--card-bg); border: 1px solid var(--border-color);">
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-start">
                    <div class="mb-3 mb-md-0">
                        <div class="d-flex align-items-center mb-2">
                            <h1 class="h2 fw-bold mb-0 me-3" style="color: var(--primary-text);"><%= campground.title %></h1>
                            <div class="d-flex align-items-center bg-primary bg-opacity-10 px-3 py-1 rounded-pill">
                                <i class="fas fa-star text-warning me-1"></i>
                                <span class="fw-medium"><%= typeof campground.rating !== 'undefined' ? campground.rating.toFixed(1) : 'N/A' %></span>
                                <span class="text-muted ms-1">(<%= typeof campground.reviewCount !== 'undefined' ? campground.reviewCount : '0' %> reviews)</span>
                            </div>
                        </div>
                        
                        <div class="d-flex flex-wrap align-items-center gap-3 mb-3">
                            <div class="d-flex align-items-center text-secondary">
                                <i class="fas fa-map-marker-alt me-2" style="color: var(--accent-color);"></i>
                                <span><%= campground.location || 'Location not specified' %></span>
                            </div>
                            <div class="vr text-secondary d-none d-md-block"></div>
                            <div class="d-flex align-items-center text-secondary">
                                <i class="fas fa-tag me-2" style="color: var(--accent-color);"></i>
                                <span>Starting from <span class="fw-bold" style="color: var(--accent-color);">$<%= campground.price && !isNaN(campground.price) ? parseFloat(campground.price).toFixed(2) : '0.00' %></span> / night</span>
                            </div>
                        </div>
                        
                        <div class="d-flex flex-wrap gap-2">
                            <span class="badge bg-dark bg-opacity-50 text-white px-3 py-2 mb-1">
                                <i class="fas fa-wifi me-1"></i> Free WiFi
                            </span>
                            <span class="badge bg-dark bg-opacity-50 text-white px-3 py-2 mb-1">
                                <i class="fas fa-parking me-1"></i> Free Parking
                            </span>
                            <span class="badge bg-dark bg-opacity-50 text-white px-3 py-2 mb-1">
                                <i class="fas fa-utensils me-1"></i> Restaurant
                            </span>
                            <span class="badge bg-dark bg-opacity-50 text-white px-3 py-2 mb-1">
                                <i class="fas fa-swimming-pool me-1"></i> Pool
                            </span>
                        </div>
                    </div>
                    
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-secondary btn-share" data-bs-toggle="tooltip" title="Share this campground">
                            <i class="fas fa-share-alt"></i>
                            <span class="d-none d-lg-inline ms-1">Share</span>
                        </button>
                        <% if (typeof currentUser !== 'undefined' && currentUser) { %>
                            <form action="/campgrounds/<%= campground._id %>/save" method="POST" class="d-inline save-form" data-campground-id="<%= campground._id %>">
                                <button type="button" class="btn btn-primary btn-save" data-campground-id="<%= campground._id %>">
                                    <i class="far fa-heart me-1"></i>
                                    <span>Save</span>
                                </button>
                            </form>
                        <% } else { %>
                            <a href="/login" class="btn btn-primary" data-bs-toggle="tooltip" title="Login to save this campground">
                                <i class="far fa-heart me-1"></i>
                                <span>Login to Save</span>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Image Gallery -->
    <div class="row g-3 mb-5">
        <% if (campground.image) { %>
            <!-- Main Image -->
            <div class="col-12">
                <div class="position-relative rounded-3 overflow-hidden" style="height: 500px; background: var(--darker-bg);">
                    <img src="<%= campground.image %>" 
                         class="w-100 h-100" 
                         alt="<%= campground.title %>"
                         style="object-fit: cover; object-position: center; transition: transform 0.5s ease;"
                         onmouseover="this.style.transform='scale(1.03)'"
                         onmouseout="this.style.transform='scale(1)'"
                         onerror="this.src='https://source.unsplash.com/random/1200x800/?camping'">
                    <div class="position-absolute bottom-0 start-0 w-100 p-4" style="background: linear-gradient(transparent, rgba(0,0,0,0.7));">
                        <h2 class="text-white mb-0"><%= campground.title %></h2>
                        <p class="text-white-50 mb-0"><%= campground.location || 'Beautiful location' %></p>
                    </div>
                </div>
            </div>
        <% } else { %>
            <!-- Fallback if no image -->
            <div class="col-12">
                <div class="position-relative rounded-3 overflow-hidden" style="height: 500px; background: var(--darker-bg);">
                    <img src="https://source.unsplash.com/random/1200x800/?camping" 
                         class="w-100 h-100" 
                         alt="<%= campground.title %>"
                         style="object-fit: cover; object-position: center;">
                    <div class="position-absolute bottom-0 start-0 w-100 p-4" style="background: linear-gradient(transparent, rgba(0,0,0,0.7));">
                        <h2 class="text-white mb-0"><%= campground.title %></h2>
                        <p class="text-white-50 mb-0"><%= campground.location || 'Beautiful location' %></p>
                    </div>
                </div>
            </div>
        <% } %>
    </div>

    <!-- Campground Details -->
    <div class="row g-4">
        <div class="col-lg-8">
            <!-- About Section -->
            <div class="card border-0 shadow-sm bg-dark-3 mb-4">
                <div class="card-body p-4">
                    <h3 class="h4 mb-4 text-white fw-bold">About this campground</h3>
                    <div class="text-white-50">
                        <% if (campground.description && campground.description.trim() !== '') { %>
                            <p class="card-text mb-4"><%= campground.description %></p>
                        <% } else { %>
                            <p class="card-text fst-italic text-muted mb-4">No description available for this campground.</p>
                        <% } %>
                        
                        <!-- Campground Details -->
                        <div class="row g-4">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-map-marker-alt" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Location</h6>
                                        <p class="mb-0 small"><%= campground.location || 'Not specified' %></p>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-mountain" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Terrain</h6>
                                        <p class="mb-0 small"><%= campground.terrain || 'Forest' %></p>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-tree" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Surroundings</h6>
                                        <p class="mb-0 small"><%= campground.surroundings || 'Wooded area' %></p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-calendar-alt" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Best Season</h6>
                                        <p class="mb-0 small"><%= campground.bestSeason || 'Year-round' %></p>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center mb-3">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-users" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Group Size</h6>
                                        <p class="mb-0 small">Up to <%= campground.groupSize || '10' %> people</p>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3 me-3" style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-route" style="color: var(--accent-color);"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0 text-white">Access</h6>
                                        <p class="mb-0 small"><%= campground.access || 'Vehicle accessible' %></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Campground Features -->
            <div class="row mb-5">
                <div class="col-12">
                    <div class="p-4 rounded-3" style="background: var(--card-bg); border: 1px solid var(--border-color);">
                        <h3 class="h4 mb-4" style="color: var(--primary-text);">Campground Features</h3>
                        
                        <div class="row g-3">
                            <% const features = [
                                { icon: 'campground', name: 'Tent Sites', available: true, category: 'accommodation' },
                                { icon: 'rv', name: 'RV Sites', available: true, category: 'accommodation' },
                                { icon: 'cabin', name: 'Cabins', available: false, category: 'accommodation' },
                                { icon: 'fire', name: 'Fire Pits', available: true, category: 'facilities' },
                                { icon: 'utensils', name: 'Picnic Tables', available: true, category: 'facilities' },
                                { icon: 'toilet', name: 'Restrooms', available: true, category: 'facilities' },
                                { icon: 'shower', name: 'Showers', available: true, category: 'facilities' },
                                { icon: 'water', name: 'Drinking Water', available: true, category: 'facilities' },
                                { icon: 'trash', name: 'Trash/Recycling', available: true, category: 'facilities' },
                                { icon: 'fire-extinguisher', name: 'Firewood', available: true, category: 'supplies' },
                                { icon: 'store', name: 'Camp Store', available: false, category: 'supplies' },
                                { icon: 'wifi', name: 'WiFi', available: false, category: 'connectivity' },
                                { icon: 'signal', name: 'Cell Reception', available: true, category: 'connectivity' },
                                { icon: 'paw', name: 'Pet Friendly', available: true, category: 'policies' },
                                { icon: 'fire', name: 'Campfires Allowed', available: true, category: 'policies' },
                                { icon: 'music', name: 'Quiet Hours', available: true, category: 'policies' }
                            ];
                            
                            // Categories with icons and display names
                            const categories = {
                                'accommodation': { icon: 'campground', name: 'Accommodation' },
                                'facilities': { icon: 'toilet-paper', name: 'Facilities' },
                                'supplies': { icon: 'store', name: 'Supplies' },
                                'connectivity': { icon: 'wifi', name: 'Connectivity' },
                                'policies': { icon: 'clipboard-list', name: 'Policies' }
                            };
                            
                            // Group features by category
                            const featuresByCategory = {};
                            features.forEach(feature => {
                                if (!featuresByCategory[feature.category]) {
                                    featuresByCategory[feature.category] = [];
                                }
                                featuresByCategory[feature.category].push(feature);
                            });
                            %>
                            
                            <!-- Category Tabs -->
                            <div class="col-12 mb-4">
                                <ul class="nav nav-tabs nav-fill" id="featuresTab" role="tablist">
                                    <% Object.entries(categories).forEach(([categoryId, category], index) => { %>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link <%= index === 0 ? 'active' : '' %>" 
                                                    id="<%= categoryId %>-tab" 
                                                    data-bs-toggle="tab" 
                                                    data-bs-target="#<%= categoryId %>" 
                                                    type="button" 
                                                    role="tab" 
                                                    aria-controls="<%= categoryId %>" 
                                                    aria-selected="<%= index === 0 ? 'true' : 'false' %>">
                                                <i class="fas fa-<%= category.icon %> me-2"></i>
                                                <%= category.name %>
                                            </button>
                                        </li>
                                    <% }); %>
                                </ul>
                                
                                <div class="tab-content p-3 border border-top-0 rounded-bottom" style="background: var(--darker-bg);">
                                    <% Object.entries(categories).forEach(([categoryId, category], index) => { %>
                                        <div class="tab-pane fade <%= index === 0 ? 'show active' : '' %>" 
                                             id="<%= categoryId %>" 
                                             role="tabpanel" 
                                             aria-labelledby="<%= categoryId %>-tab">
                                            <div class="row g-3">
                                                <% featuresByCategory[categoryId]?.forEach(feature => { %>
                                                    <div class="col-6 col-md-4 col-lg-3">
                                                        <div class="d-flex align-items-center p-2 rounded-3 h-100" 
                                                             style="background: rgba(255,255,255,0.05);">
                                                            <div class="me-2" style="width: 30px; text-align: center;">
                                                                <i class="fas fa-<%= feature.icon %> <%= feature.available ? 'text-success' : 'text-muted' %>"></i>
                                                            </div>
                                                            <div class="small">
                                                                <span class="<%= feature.available ? 'text-white' : 'text-muted' %>">
                                                                    <%= feature.name %>
                                                                </span>
                                                                <% if (!feature.available) { %>
                                                                    <span class="badge bg-secondary ms-2">Not Available</span>
                                                                <% } %>
                                                            </div>
                                                        </div>
                                                    </div>
                                                <% }); %>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Activities Section -->
                        <div class="mt-4 pt-4 border-top border-secondary">
                            <h4 class="h5 mb-3" style="color: var(--primary-text);">Nearby Activities</h4>
                            <div class="d-flex flex-wrap gap-2">
                                <% const activities = [
                                    { name: 'Hiking', icon: 'hiking' },
                                    { name: 'Fishing', icon: 'fish' },
                                    { name: 'Swimming', icon: 'swimmer' },
                                    { name: 'Wildlife Viewing', icon: 'binoculars' },
                                    { name: 'Kayaking', icon: 'water' },
                                    { name: 'Mountain Biking', icon: 'bicycle' },
                                    { name: 'Bird Watching', icon: 'dove' },
                                    { name: 'Photography', icon: 'camera' }
                                ]; %>
                                
                                <% activities.forEach(activity => { %>
                                    <span class="badge bg-dark bg-opacity-50 text-white px-3 py-2 mb-1">
                                        <i class="fas fa-<%= activity.icon %> me-1"></i>
                                        <%= activity.name %>
                                    </span>
                                <% }); %>
                            </div>
                        </div>
                        
                        <!-- Important Notes -->
                        <div class="mt-4 pt-4 border-top border-secondary">
                            <h4 class="h5 mb-3" style="color: var(--primary-text);">Important Notes</h4>
                            <ul class="list-unstyled">
                                <li class="mb-2">
                                    <i class="fas fa-info-circle text-info me-2"></i>
                                    Check-in: 2:00 PM | Check-out: 12:00 PM
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-ban text-warning me-2"></i>
                                    No loud music after 10:00 PM
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-fire text-danger me-2"></i>
                                    Fire restrictions may apply during dry seasons
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-paw text-success me-2"></i>
                                    Pets must be kept on leash at all times
                                </li>
                                <li>
                                    <i class="fas fa-trash-alt text-secondary me-2"></i>
                                    Pack it in, pack it out - Leave No Trace principles
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4">
            <!-- Booking Card -->
            <div class="card border-0 shadow-sm sticky-top booking-card">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <div class="booking-price">
                                $<%= campground.price && !isNaN(campground.price) ? parseFloat(campground.price).toFixed(2) : '0.00' %>
                            </div>
                            <div class="booking-price-label">per night (excl. taxes & fees)</div>
                        </div>
                        <div class="text-end">
                            <div class="booking-badge booking-badge-success">
                                <i class="fas fa-check-circle me-1"></i> Free cancellation
                            </div>
                            <div class="booking-badge">Pay at property</div>
                        </div>
                    </div>
                    
                    <form action="/campgrounds/<%= campground._id %>/bookings" method="POST" class="mb-4">
                        <div class="row g-3">
                            <div class="col-12">
                                <label for="checkIn" class="form-label booking-label">CHECK-IN</label>
                                <div class="input-group booking-input-group">
                                    <span class="input-group-text">
                                        <i class="far fa-calendar-alt"></i>
                                    </span>
                                    <input type="date" class="form-control booking-input" id="checkIn" name="checkIn" required>
                                </div>
                            </div>
                            
                            <div class="col-12">
                                <label for="checkOut" class="form-label booking-label">CHECK-OUT</label>
                                <div class="input-group booking-input-group">
                                    <span class="input-group-text">
                                        <i class="far fa-calendar-alt"></i>
                                    </span>
                                    <input type="date" class="form-control booking-input" id="checkOut" name="checkOut" required>
                                </div>
                            </div>
                            
                            <div class="col-12">
                                <label for="guests" class="form-label booking-label">GUESTS</label>
                                <div class="input-group booking-input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-user-friends"></i>
                                    </span>
                                    <select class="form-select booking-select" id="guests" name="guests">
                                        <option value="1">1 Guest</option>
                                        <option value="2" selected>2 Guests</option>
                                        <option value="3">3 Guests</option>
                                        <option value="4">4 Guests</option>
                                        <option value="5">5+ Guests</option>
                                    </select>
                                </div>
                            </div>
                            
                            <div class="col-12 mt-2">
                                <button type="submit" class="btn w-100 booking-button">
                                    <i class="fas fa-calendar-check me-2"></i>Book Now
                                </button>
                            </div>
                            
                            <div class="col-12 mt-3">
                                <div class="booking-price-breakdown">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="text-muted">$<%= campground.price && !isNaN(campground.price) ? parseFloat(campground.price).toFixed(2) : '0.00' %> x 5 nights</span>
                                        <span class="fw-medium">$<%= ((campground.price && !isNaN(campground.price) ? parseFloat(campground.price) * 5 : 0).toFixed(2)) %></span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="text-muted">Service fee</span>
                                        <span class="fw-medium">$15.00</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="text-muted">Taxes & fees</span>
                                        <span class="fw-medium">$12.45</span>
                                    </div>
                                    <div class="d-flex justify-content-between mt-3 pt-2 border-top border-secondary">
                                        <span class="fw-bold">Total (USD)</span>
                                        <span class="fw-bold">
                                            $<%= ((campground.price && !isNaN(campground.price) ? parseFloat(campground.price) * 5 : 0) + 15 + 12.45).toFixed(2) %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                    
                    <div class="text-center mt-3">
                        <div class="booking-secure-info">
                            <i class="fas fa-lock me-1"></i> Secure booking
                        </div>
                        <div class="booking-payment-info">
                            <i class="far fa-credit-card me-1"></i> No credit card needed to book
                        </div>
                    </div>
                </div>
            </div>

            <!-- Host Info -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body text-center">
                    <img src="https://randomuser.me/api/portraits/men/1.jpg" 
                         class="rounded-circle mb-3" 
                         width="80" 
                         height="80" 
                         alt="Host">
                    <h5 class="h6 mb-1">Hosted by John</h5>
                    <p class="text-muted small mb-3">Superhost · 5 years hosting</p>
                    <p class="small text-muted">Response rate: 100% · Response time: within an hour</p>
                    <button class="btn btn-outline-primary w-100 mb-2 btn-contact-host" data-host-id="<%= campground.author || 'host_123' %>">
                        <i class="fas fa-envelope me-2"></i>Contact Host
                    </button>
                </div>
            </div>

            <!-- Things to Know -->
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h3 class="h5 mb-3">Things to know</h3>
                    
                    <div class="accordion" id="rulesAccordion">
                        <div class="accordion-item border-0">
                            <h2 class="accordion-header">
                                <button class="accordion-button bg-transparent shadow-none" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">
                                    House Rules
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#rulesAccordion">
                                <div class="accordion-body p-0 pt-2">
                                    <div class="d-flex mb-2">
                                        <i class="fas fa-smoking-ban text-muted me-2 mt-1"></i>
                                        <span>No smoking</span>
                                    </div>
                                    <div class="d-flex mb-2">
                                        <i class="fas fa-dog text-muted me-2 mt-1"></i>
                                        <span>Pets allowed</span>
                                    </div>
                                    <div class="d-flex">
                                        <i class="fas fa-clock text-muted me-2 mt-1"></i>
                                        <span>Check-in: After 2 PM · Checkout: 12 PM</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item border-0">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed bg-transparent shadow-none" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo">
                                    Cancellation Policy
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#rulesAccordion">
                                <div class="accordion-body p-0 pt-2">
                                    <p class="small">Free cancellation up to 5 days before check-in. After that, cancel up to 24 hours before check-in and get a full refund, minus the first night.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Initialize tooltips
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Bootstrap tooltips
        const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        tooltips.forEach(tooltip => {
            new bootstrap.Tooltip(tooltip);
        });
        
        // Handle save button click
        document.querySelectorAll('.btn-save').forEach(button => {
            button.addEventListener('click', async function(e) {
                e.preventDefault();
                const button = this;
                const form = button.closest('.save-form');
                const campgroundId = button.getAttribute('data-campground-id');
                const icon = button.querySelector('i');
                const text = button.querySelector('span');
                
                // Show loading state
                const originalText = text.textContent;
                const originalHTML = button.innerHTML;
                button.disabled = true;
                text.textContent = 'Saving...';
                
                try {
                    // Send AJAX request to save/unsave
                    const response = await fetch(`/campgrounds/${campgroundId}/save`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin'
                    });
                    
                    const data = await response.json();
                    
                    if (!response.ok) {
                        throw new Error(data.message || 'Failed to save campground');
                    }
                    
                    // Update UI based on response
                    if (data.action === 'saved') {
                        icon.classList.remove('far', 'fa-heart');
                        icon.classList.add('fas', 'fa-check');
                        text.textContent = 'Saved';
                        button.classList.add('btn-success');
                        button.classList.remove('btn-primary');
                        button.classList.add('saved');
                    } else {
                        // Already saved state
                        icon.classList.remove('far', 'fa-heart');
                        icon.classList.add('fas', 'fa-check');
                        text.textContent = 'Saved';
                        button.classList.add('btn-success');
                        button.classList.remove('btn-primary');
                        button.classList.add('saved');
                    }
                    
                    // Show success message
                    const toast = new bootstrap.Toast(document.getElementById('saveToast'));
                    const toastMessage = document.getElementById('toastMessage');
                    toastMessage.textContent = data.message || 'Campground saved successfully';
                    toast.show();
                    
                } catch (error) {
                    console.error('Error:', error);
                    // Show error message
                    const toast = new bootstrap.Toast(document.getElementById('errorToast'));
                    const toastMessage = document.getElementById('errorMessage');
                    toastMessage.textContent = error.message || 'Failed to update save status. Please try again.';
                    toast.show();
                    
                    // Revert button state
                    icon.classList.remove('fas', 'fa-check', 'fa-heart');
                    icon.classList.add('far', 'fa-heart');
                    text.textContent = 'Save';
                    button.classList.remove('btn-success', 'saved');
                    button.classList.add('btn-primary');
                } finally {
                    button.disabled = false;
                }
            });
        });
        
        // Check initial saved state
        document.addEventListener('DOMContentLoaded', function() {
            const saveButton = document.querySelector('.btn-save');
            if (saveButton) {
                const isSaved = saveButton.classList.contains('saved');
                const icon = saveButton.querySelector('i');
                const text = saveButton.querySelector('span');
                
                if (isSaved) {
                    icon.classList.remove('far', 'fa-heart');
                    icon.classList.add('fas', 'fa-check');
                    text.textContent = 'Saved';
                    saveButton.classList.add('btn-success');
                    saveButton.classList.remove('btn-primary');
                }
            }
        });
    });

    // Lightbox functionality
    let currentImageIndex = 0;
    let images = [];
    
    // Function to update the displayed image
    function updateLightboxImage() {
        if (!images || !images.length) return;
        
        const lightboxImage = document.getElementById('lightboxImage');
        if (!lightboxImage) return;
        
        // Show loading state
        lightboxImage.style.opacity = '0.5';
        
        // Preload image for smooth transition
        const img = new Image();
        img.onload = function() {
            lightboxImage.src = images[currentImageIndex].url;
            lightboxImage.alt = `Image ${currentImageIndex + 1} of ${images.length}`;
            lightboxImage.style.opacity = '1';
            updateImageCount();
        };
        img.onerror = function() {
            console.error('Failed to load image:', images[currentImageIndex].url);
            lightboxImage.style.opacity = '1';
        };
        img.src = images[currentImageIndex].url;
    }
    
    // Function to change current image
    function changeImage(direction) {
        if (!images || !images.length) return;
        currentImageIndex = (currentImageIndex + direction + images.length) % images.length;
        updateLightboxImage();
    }
    
    // Go to specific image
    window.goToImage = function(index) {
        if (index >= 0 && index < images.length) {
            currentImageIndex = index;
            updateLightboxImage();
        }
    };
    
    // Open lightbox with specific image
    window.openLightbox = function(index) {
        currentImageIndex = index;
        updateLightboxImage();
        const lightboxModal = new bootstrap.Modal(document.getElementById('lightboxModal'));
        lightboxModal.show();
    };
    
    // Function to update the image counter
    function updateImageCount() {
        const counter = document.getElementById('currentImageCount');
        const total = document.getElementById('totalImages');
        if (counter && total && images.length > 0) {
            counter.textContent = currentImageIndex + 1;
            total.textContent = images.length;
        }
    }
    
    function downloadCurrentImage() {
        if (!images || !images.length) return;
        
        const link = document.createElement('a');
        link.href = images[currentImageIndex].url;
        link.download = `campground-image-${currentImageIndex + 1}.jpg`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
    
    // Handle modal shown event to update the lightbox when opened
    const lightboxModal = document.getElementById('lightboxModal');
    if (lightboxModal) {
        lightboxModal.addEventListener('shown.bs.modal', function() {
            updateLightboxImage();
        });
    }
    
    // Store image data in a global variable from EJS
    const CAMP_IMAGE = '<%= campground.image || "" %>';
    
    // Initialize the lightbox when the page loads
    document.addEventListener('DOMContentLoaded', function() {
        // Get the single image from the global variable
        if (CAMP_IMAGE && CAMP_IMAGE.trim() !== '') {
            images = [{ url: CAMP_IMAGE }];
        } else {
            console.warn('No image found for this campground');
            images = [];
        }
        
        // Add click handlers for the main image
        const mainImage = document.querySelector('.position-relative img');
        if (mainImage && images.length > 0) {
            mainImage.style.cursor = 'pointer';
            mainImage.addEventListener('click', function() {
                window.openLightbox(0);
            });
        }
        
        // Add keyboard navigation
        document.addEventListener('keydown', function(e) {
            const lightbox = document.getElementById('lightboxModal');
            if (!lightbox || !lightbox.classList.contains('show')) return;
            
            if (e.key === 'ArrowRight') {
                changeImage(1);
            } else if (e.key === 'ArrowLeft') {
                changeImage(-1);
            } else if (e.key === 'Escape') {
                const modal = bootstrap.Modal.getInstance(lightbox);
                if (modal) modal.hide();
            }
        });
    });
</script>

<!-- Add Review Modal -->
<div class="modal fade" id="addReviewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Write a Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">Rating</label>
                        <div class="star-rating">
                            <input type="hidden" id="rating" name="rating" value="5">
                            <i class="fas fa-star star" onclick="setRating(5, 'rating')"></i>
                            <i class="fas fa-star star" onclick="setRating(4, 'rating')"></i>
                            <i class="fas fa-star star" onclick="setRating(3, 'rating')"></i>
                            <i class="fas fa-star star" onclick="setRating(2, 'rating')"></i>
                            <i class="fas fa-star star" onclick="setRating(1, 'rating')"></i>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Your Review</label>
                        <textarea class="form-control" rows="4" placeholder="Share your experience..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Add Photos (Optional)</label>
                        <input type="file" class="form-control" multiple accept="image/*">
                    </div>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-paper-plane me-2"></i>Submit Review
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Lightbox Modal -->
<div class="modal fade" id="lightboxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content bg-dark">
            <div class="modal-header border-0">
                <div class="text-white">
                    <span id="currentImageCount">1</span> / <span id="totalImages"><%= campground.image ? '1' : '0' %></span>
                </div>
                <div>
                    <button type="button" class="btn btn-dark me-2" onclick="downloadCurrentImage()" title="Download">
                        <i class="fas fa-download"></i>
                    </button>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
            </div>
            <div class="modal-body d-flex align-items-center justify-content-center p-0">
                <div class="text-center" style="max-height: 80vh; max-width: 90vw;">
                    <img id="lightboxImage" 
                         src="" 
                         class="img-fluid" 
                         style="max-height: 80vh; max-width: 100%; object-fit: contain;"
                         alt="">
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.star-rating {
    font-size: 24px;
    color: #ffc107;
    cursor: pointer;
}
.star-rating .far {
    margin-right: 5px;
}
.star-rating .far:hover,
.star-rating .far.active {
    font-weight: 900;
}
</style>

<script>
// Star rating functionality
document.addEventListener('DOMContentLoaded', function() {
    const stars = document.querySelectorAll('.star-rating .far');
    const ratingInput = document.getElementById('rating');
    
    stars.forEach(star => {
        star.addEventListener('click', function() {
            const rating = this.getAttribute('data-rating');
            ratingInput.value = rating;
            
            // Update star display
            stars.forEach((s, index) => {
                if (index < rating) {
                    s.classList.add('fas', 'active');
                    s.classList.remove('far');
                } else {
                    s.classList.add('far');
                    s.classList.remove('fas', 'active');
                }
            });
        });
    });
    
    // Tooltip initialization is handled at the top of the file
});
</script>